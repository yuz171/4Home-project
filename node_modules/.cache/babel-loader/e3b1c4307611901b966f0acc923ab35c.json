{"ast":null,"code":"import \"antd-mobile/lib/tab-bar/style/css\";\nimport _TabBar from \"antd-mobile/lib/tab-bar\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React from 'react'; // 导入路由\n\nimport { Route } from 'react-router-dom'; // 导入 TabBar\n\n// 导入组件自己的样式文件\nimport './index.css'; // 导入TabBar菜单的组件\n\nimport News from '../News';\nimport Index from '../Index';\nimport HouseList from '../HouseList';\nimport Profile from '../Profile'; // TabBar 数据\n\nconst tabItems = [{\n  title: '首页',\n  icon: 'icon-ind',\n  path: '/home'\n}, {\n  title: '找房',\n  icon: 'icon-findHouse',\n  path: '/home/list'\n}, {\n  title: '资讯',\n  icon: 'icon-infom',\n  path: '/home/news'\n}, {\n  title: '我的',\n  icon: 'icon-my',\n  path: '/home/profile'\n}];\n/* \r\n  问题：点击首页导航菜单，导航到 找房列表 页面时，找房菜单没有高亮\r\n\r\n  原因：原来我们实现该功能的时候，只考虑了 点击 以及 第一次加载 Home 组件的情况。但是，我们没有考虑不重新加载 Home 组件时的路由切换，因为，这种情况下，我们的代码没有覆盖到\r\n\r\n  解决：\r\n    思路：在 路由切换 时，也执行 菜单高亮 的逻辑代码\r\n    1 添加 componentDidUpdate 钩子函数\r\n    2 在钩子函数中判断路由地址是否切换（因为路由的信息是通过 props 传递给组件的，所以，通过比较更新前后的两个props）\r\n    3 在路由地址切换时，让 菜单高亮\r\n*/\n\nexport default class Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 默认选中的TabBar菜单项\n      selectedTab: this.props.location.pathname // 组件接收到新的props（此处，实际上是路由信息）就会触发该钩子函数\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // prevProps 上一次的props，此处也就是上一次的路由信息\n    // this.props 当前最新的props，此处也就是最新的路由信息\n    // 注意：在该钩子函数中更新状态时，一定要在 条件判断 中进行，否则会造成递归更新的问题\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      // 此时，就说明路由发生切换了\n      this.setState({\n        selectedTab: this.props.location.pathname\n      });\n    }\n  } // 渲染 TabBar.Item\n\n\n  renderTabBarItem() {\n    return tabItems.map(item => React.createElement(_TabBar.Item, {\n      title: item.title,\n      key: item.title,\n      icon: React.createElement(\"i\", {\n        className: \"iconfont \".concat(item.icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }),\n      selectedIcon: React.createElement(\"i\", {\n        className: \"iconfont \".concat(item.icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      selected: this.state.selectedTab === item.path,\n      onPress: () => {\n        this.setState({\n          selectedTab: item.path\n        }); // 路由切换\n\n        this.props.history.push(item.path);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    // console.log(this.props.location.pathname)\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/home/news\",\n      component: News,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      component: Index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home/list\",\n      component: HouseList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home/profile\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(_TabBar, {\n      tintColor: \"#21b97a\",\n      noRenderContent: true,\n      barTintColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.renderTabBarItem()));\n  }\n\n}","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\Home\\index.js"],"names":["React","Route","News","Index","HouseList","Profile","tabItems","title","icon","path","Home","Component","state","selectedTab","props","location","pathname","componentDidUpdate","prevProps","setState","renderTabBarItem","map","item","history","push","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AAGA;AACA,OAAO,aAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADe,EAMf;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANe,EAWf;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXe,EAgBf;AACEF,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAhBe,CAAjB;AAuBA;;;;;;;;;;;;AAYA,eAAe,MAAMC,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACN;AACAC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAF3B,CAKR;;AALQ,KADwC;AAAA;;AAOhDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA;AACA;AACA,QAAIA,SAAS,CAACH,QAAV,CAAmBC,QAAnB,KAAgC,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,QAAxD,EAAkE;AAChE;AACA,WAAKG,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC;AADrB,OAAd;AAGD;AACF,GAjB+C,CAmBhD;;;AACAI,EAAAA,gBAAgB,GAAG;AACjB,WAAOd,QAAQ,CAACe,GAAT,CAAaC,IAAI,IACtB,4BAAQ,IAAR;AACE,MAAA,KAAK,EAAEA,IAAI,CAACf,KADd;AAEE,MAAA,GAAG,EAAEe,IAAI,CAACf,KAFZ;AAGE,MAAA,IAAI,EAAE;AAAG,QAAA,SAAS,qBAAce,IAAI,CAACd,IAAnB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAIE,MAAA,YAAY,EAAE;AAAG,QAAA,SAAS,qBAAcc,IAAI,CAACd,IAAnB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWC,WAAX,KAA2BS,IAAI,CAACb,IAL5C;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKU,QAAL,CAAc;AACZN,UAAAA,WAAW,EAAES,IAAI,CAACb;AADN,SAAd,EADa,CAKb;;AACA,aAAKK,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBF,IAAI,CAACb,IAA7B;AACD,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAiBD;;AAEDgB,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,eAAe,EAAE,IAA7C;AAAmD,MAAA,YAAY,EAAC,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKe,gBAAL,EADH,CARF,CADF;AAcD;;AAxD+C","sourcesContent":["import React from 'react'\r\n// 导入路由\r\nimport { Route } from 'react-router-dom'\r\n// 导入 TabBar\r\nimport { TabBar } from 'antd-mobile'\r\n\r\n// 导入组件自己的样式文件\r\nimport './index.css'\r\n\r\n// 导入TabBar菜单的组件\r\nimport News from '../News'\r\nimport Index from '../Index'\r\nimport HouseList from '../HouseList'\r\nimport Profile from '../Profile'\r\n\r\n// TabBar 数据\r\nconst tabItems = [\r\n  {\r\n    title: '首页',\r\n    icon: 'icon-ind',\r\n    path: '/home'\r\n  },\r\n  {\r\n    title: '找房',\r\n    icon: 'icon-findHouse',\r\n    path: '/home/list'\r\n  },\r\n  {\r\n    title: '资讯',\r\n    icon: 'icon-infom',\r\n    path: '/home/news'\r\n  },\r\n  {\r\n    title: '我的',\r\n    icon: 'icon-my',\r\n    path: '/home/profile'\r\n  }\r\n]\r\n\r\n/* \r\n  问题：点击首页导航菜单，导航到 找房列表 页面时，找房菜单没有高亮\r\n\r\n  原因：原来我们实现该功能的时候，只考虑了 点击 以及 第一次加载 Home 组件的情况。但是，我们没有考虑不重新加载 Home 组件时的路由切换，因为，这种情况下，我们的代码没有覆盖到\r\n\r\n  解决：\r\n    思路：在 路由切换 时，也执行 菜单高亮 的逻辑代码\r\n    1 添加 componentDidUpdate 钩子函数\r\n    2 在钩子函数中判断路由地址是否切换（因为路由的信息是通过 props 传递给组件的，所以，通过比较更新前后的两个props）\r\n    3 在路由地址切换时，让 菜单高亮\r\n*/\r\n\r\nexport default class Home extends React.Component {\r\n  state = {\r\n    // 默认选中的TabBar菜单项\r\n    selectedTab: this.props.location.pathname\r\n  }\r\n\r\n  // 组件接收到新的props（此处，实际上是路由信息）就会触发该钩子函数\r\n  componentDidUpdate(prevProps) {\r\n    // prevProps 上一次的props，此处也就是上一次的路由信息\r\n    // this.props 当前最新的props，此处也就是最新的路由信息\r\n    // 注意：在该钩子函数中更新状态时，一定要在 条件判断 中进行，否则会造成递归更新的问题\r\n    if (prevProps.location.pathname !== this.props.location.pathname) {\r\n      // 此时，就说明路由发生切换了\r\n      this.setState({\r\n        selectedTab: this.props.location.pathname\r\n      })\r\n    }\r\n  }\r\n\r\n  // 渲染 TabBar.Item\r\n  renderTabBarItem() {\r\n    return tabItems.map(item => (\r\n      <TabBar.Item\r\n        title={item.title}\r\n        key={item.title}\r\n        icon={<i className={`iconfont ${item.icon}`} />}\r\n        selectedIcon={<i className={`iconfont ${item.icon}`} />}\r\n        selected={this.state.selectedTab === item.path}\r\n        onPress={() => {\r\n          this.setState({\r\n            selectedTab: item.path\r\n          })\r\n\r\n          // 路由切换\r\n          this.props.history.push(item.path)\r\n        }}\r\n      />\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.location.pathname)\r\n    return (\r\n      <div className=\"home\">\r\n        {/* 2.3 渲染子路由 */}\r\n        <Route path=\"/home/news\" component={News} />\r\n        <Route exact path=\"/home\" component={Index} />\r\n        <Route path=\"/home/list\" component={HouseList} />\r\n        <Route path=\"/home/profile\" component={Profile} />\r\n        {/* TabBar */}\r\n\r\n        <TabBar tintColor=\"#21b97a\" noRenderContent={true} barTintColor=\"white\">\r\n          {this.renderTabBarItem()}\r\n        </TabBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}