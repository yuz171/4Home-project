{"ast":null,"code":"import \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\HouseList\\\\components\\\\FilterTitle\\\\index.js\";\nimport React from 'react';\nimport styles from './index.module.css'; // 条件筛选栏标题数组：\n\nconst titleList = [{\n  title: '区域',\n  type: 'area'\n}, {\n  title: '方式',\n  type: 'mode'\n}, {\n  title: '租金',\n  type: 'price'\n}, {\n  title: '筛选',\n  type: 'more'\n}];\n/* \r\n  1 通过 props 接收，高亮状态对象 titleSelectedStatus。\r\n  2 遍历 titleList 数组，渲染标题列表。\r\n  3 判断高亮对象中当前标题是否高亮，如果是，就添加高亮类。\r\n\r\n  4 给标题项绑定单击事件，在事件中调用父组件传过来的方法 onClick。\r\n  5 将当前标题 type，通过 onClick 的参数，传递给父组件。\r\n  6 父组件中接收到当前 type，修改该标题的选中状态为true。\r\n*/\n\nexport default function FilterTitle({\n  titleSelectedStatus,\n  onClick\n}) {\n  return React.createElement(_Flex, {\n    align: \"center\",\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, titleList.map(item => {\n    // item.type => 'area'\n    const isSelected = titleSelectedStatus[item.type];\n    return React.createElement(_Flex.Item, {\n      key: item.type,\n      onClick: () => onClick(item.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: [styles.dropdown, isSelected ? styles.selected : ''].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, item.title), React.createElement(\"i\", {\n      className: \"iconfont icon-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }));\n}","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterTitle\\index.js"],"names":["React","styles","titleList","title","type","FilterTitle","titleSelectedStatus","onClick","root","map","item","isSelected","dropdown","selected","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAFgB,EAGhB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAHgB,EAIhB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAJgB,CAAlB;AAOA;;;;;;;;;;AAUA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAArB,EAAuD;AACpE,SACE;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEN,MAAM,CAACO,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACO,GAAV,CAAcC,IAAI,IAAI;AACrB;AACA,UAAMC,UAAU,GAAGL,mBAAmB,CAACI,IAAI,CAACN,IAAN,CAAtC;AACA,WACE,0BAAM,IAAN;AAAW,MAAA,GAAG,EAAEM,IAAI,CAACN,IAArB;AAA2B,MAAA,OAAO,EAAE,MAAMG,OAAO,CAACG,IAAI,CAACN,IAAN,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,SAAS,EAAE,CACTH,MAAM,CAACW,QADE,EAETD,UAAU,GAAGV,MAAM,CAACY,QAAV,GAAqB,EAFtB,EAGTC,IAHS,CAGJ,GAHI,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,IAAI,CAACP,KAAZ,CANF,EAOE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFF,CADF;AAcD,GAjBA,CADH,CADF;AAsBD","sourcesContent":["import React from 'react'\r\n\r\nimport { Flex } from 'antd-mobile'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 条件筛选栏标题数组：\r\nconst titleList = [\r\n  { title: '区域', type: 'area' },\r\n  { title: '方式', type: 'mode' },\r\n  { title: '租金', type: 'price' },\r\n  { title: '筛选', type: 'more' }\r\n]\r\n\r\n/* \r\n  1 通过 props 接收，高亮状态对象 titleSelectedStatus。\r\n  2 遍历 titleList 数组，渲染标题列表。\r\n  3 判断高亮对象中当前标题是否高亮，如果是，就添加高亮类。\r\n\r\n  4 给标题项绑定单击事件，在事件中调用父组件传过来的方法 onClick。\r\n  5 将当前标题 type，通过 onClick 的参数，传递给父组件。\r\n  6 父组件中接收到当前 type，修改该标题的选中状态为true。\r\n*/\r\n\r\nexport default function FilterTitle({ titleSelectedStatus, onClick }) {\r\n  return (\r\n    <Flex align=\"center\" className={styles.root}>\r\n      {titleList.map(item => {\r\n        // item.type => 'area'\r\n        const isSelected = titleSelectedStatus[item.type]\r\n        return (\r\n          <Flex.Item key={item.type} onClick={() => onClick(item.type)}>\r\n            {/* 选中类名： selected */}\r\n            <span\r\n              className={[\r\n                styles.dropdown,\r\n                isSelected ? styles.selected : ''\r\n              ].join(' ')}\r\n            >\r\n              <span>{item.title}</span>\r\n              <i className=\"iconfont icon-arrow\" />\r\n            </span>\r\n          </Flex.Item>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}