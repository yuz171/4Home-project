{"ast":null,"code":"import \"antd-mobile/lib/wing-blank/style/css\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/grid/style/css\";\nimport _Grid from \"antd-mobile/lib/grid\";\nimport \"antd-mobile/lib/carousel/style/css\";\nimport _Carousel from \"antd-mobile/lib/carousel\";\nimport \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\Index\\\\index.js\";\nimport React from 'react'; // 导入组件\n\n// 导入axios\nimport axios from 'axios'; // 导入\n\nimport { BASE_URL } from '../../utils/url'; // 导入导航菜单图片\n\nimport Nav1 from '../../assets/images/nav-1.png';\nimport Nav2 from '../../assets/images/nav-2.png';\nimport Nav3 from '../../assets/images/nav-3.png';\nimport Nav4 from '../../assets/images/nav-4.png'; // 导入样式文件\n\nimport './index.scss'; // 导入utils中获取定位城市的方法\n\nimport { getCurrentCity } from '../../utils'; // 导入搜索导航栏组件\n\nimport SearchHeader from '../../components/SearchHeader'; // 导航菜单数据\n\nconst navs = [{\n  id: 1,\n  img: Nav1,\n  title: '整租',\n  path: '/home/list'\n}, {\n  id: 2,\n  img: Nav2,\n  title: '合租',\n  path: '/home/list'\n}, {\n  id: 3,\n  img: Nav3,\n  title: '地图找房',\n  path: '/map'\n}, {\n  id: 4,\n  img: Nav4,\n  title: '去出租',\n  path: '/rent/add'\n}]; // 获取地理位置信息\n// navigator.geolocation.getCurrentPosition(position => {\n//   console.log('当前位置信息：', position)\n// })\n\n/* \r\n  1 打开百度地图JS API 定位文档 。\r\n  2 通过 IP 定位获取到当前城市名称。\r\n  3 调用我们服务器的接口，换取项目中的城市信息（有房源的城市的名称和id）。\r\n  4 将接口返回的城市信息展示在顶部导航栏中。\r\n*/\n\nexport default class Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 轮播图状态数据\n      swipers: [],\n      isSwiperLoaded: false,\n      // 租房小组数据\n      groups: [],\n      // 最新资讯\n      news: [],\n      // 当前城市名称\n      curCityName: '上海' // 获取轮播图数据的方法\n\n    };\n  }\n\n  async getSwipers() {\n    const res = await axios.get('http://localhost:8080/home/swiper');\n    this.setState({\n      swipers: res.data.body,\n      isSwiperLoaded: true\n    });\n  } // 获取租房小组数据的方法\n\n\n  async getGroups() {\n    const res = await axios.get('http://localhost:8080/home/groups', {\n      params: {\n        area: 'AREA%7C88cff55c-aaa4-e2e0'\n      }\n    }); // console.log(res)\n\n    this.setState({\n      groups: res.data.body\n    });\n  } // 获取最新资讯\n\n\n  async getNews() {\n    const res = await axios.get('http://localhost:8080/home/news?area=AREA%7C88cff55c-aaa4-e2e0');\n    this.setState({\n      news: res.data.body\n    });\n  }\n\n  async componentDidMount() {\n    this.getSwipers();\n    this.getGroups();\n    this.getNews(); // 2 通过 IP 定位获取到当前城市名称。\n    // const curCity = new window.BMap.LocalCity()\n    // curCity.get(async res => {\n    //   // console.log('当前城市信息：', res)\n    //   const result = await axios.get(\n    //     `http://localhost:8080/area/info?name=${res.name}`\n    //   )\n    //   // console.log(result)\n    //   this.setState({\n    //     curCityName: result.data.body.label\n    //   })\n    // })\n\n    const curCity = await getCurrentCity();\n    this.setState({\n      curCityName: curCity.label\n    });\n  } // 渲染轮播图结构\n\n\n  renderSwipers() {\n    return this.state.swipers.map(item => React.createElement(\"a\", {\n      key: item.id,\n      href: \"http://itcast.cn\",\n      style: {\n        display: 'inline-block',\n        width: '100%',\n        height: 212\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: BASE_URL + item.imgSrc,\n      alt: \"\",\n      style: {\n        width: '100%',\n        verticalAlign: 'top'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  } // 渲染导航菜单\n\n\n  renderNavs() {\n    return navs.map(item => React.createElement(_Flex.Item, {\n      key: item.id,\n      onClick: () => this.props.history.push(item.path),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, item.title)));\n  } // 渲染最新资讯\n\n\n  renderNews() {\n    return this.state.news.map(item => React.createElement(\"div\", {\n      className: \"news-item\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imgwrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img\",\n      src: \"http://localhost:8080\".concat(item.imgSrc),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(_Flex, {\n      className: \"content\",\n      direction: \"column\",\n      justify: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, item.title), React.createElement(_Flex, {\n      className: \"info\",\n      justify: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, item.from), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, item.date)))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"swiper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.isSwiperLoaded ? React.createElement(_Carousel, {\n      autoplay: true,\n      infinite: true,\n      autoplayInterval: 5000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.renderSwipers()) : '', React.createElement(SearchHeader, {\n      cityName: this.state.curCityName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(_Flex, {\n      className: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.renderNavs()), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"group-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"\\u79DF\\u623F\\u5C0F\\u7EC4 \", React.createElement(\"span\", {\n      className: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"\\u66F4\\u591A\")), React.createElement(_Grid, {\n      data: this.state.groups,\n      columnNum: 2,\n      square: false,\n      hasLine: false,\n      renderItem: item => React.createElement(_Flex, {\n        className: \"group-item\",\n        justify: \"around\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, item.title), React.createElement(\"span\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, item.desc)), React.createElement(\"img\", {\n        src: \"http://localhost:8080\".concat(item.imgSrc),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"group-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\u6700\\u65B0\\u8D44\\u8BAF\"), React.createElement(_WingBlank, {\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.renderNews())));\n  }\n\n}","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\Index\\index.js"],"names":["React","axios","BASE_URL","Nav1","Nav2","Nav3","Nav4","getCurrentCity","SearchHeader","navs","id","img","title","path","Index","Component","state","swipers","isSwiperLoaded","groups","news","curCityName","getSwipers","res","get","setState","data","body","getGroups","params","area","getNews","componentDidMount","curCity","label","renderSwipers","map","item","display","width","height","imgSrc","verticalAlign","renderNavs","props","history","push","renderNews","from","date","render","desc"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n// 导入组件\r\nimport { Carousel, Flex, Grid, WingBlank } from 'antd-mobile'\r\n\r\n// 导入axios\r\nimport axios from 'axios'\r\n\r\n// 导入\r\nimport { BASE_URL } from '../../utils/url'\r\n\r\n// 导入导航菜单图片\r\nimport Nav1 from '../../assets/images/nav-1.png'\r\nimport Nav2 from '../../assets/images/nav-2.png'\r\nimport Nav3 from '../../assets/images/nav-3.png'\r\nimport Nav4 from '../../assets/images/nav-4.png'\r\n\r\n// 导入样式文件\r\nimport './index.scss'\r\n\r\n// 导入utils中获取定位城市的方法\r\nimport { getCurrentCity } from '../../utils'\r\n\r\n// 导入搜索导航栏组件\r\nimport SearchHeader from '../../components/SearchHeader'\r\n\r\n// 导航菜单数据\r\nconst navs = [\r\n  {\r\n    id: 1,\r\n    img: Nav1,\r\n    title: '整租',\r\n    path: '/home/list'\r\n  },\r\n  {\r\n    id: 2,\r\n    img: Nav2,\r\n    title: '合租',\r\n    path: '/home/list'\r\n  },\r\n  {\r\n    id: 3,\r\n    img: Nav3,\r\n    title: '地图找房',\r\n    path: '/map'\r\n  },\r\n  {\r\n    id: 4,\r\n    img: Nav4,\r\n    title: '去出租',\r\n    path: '/rent/add'\r\n  }\r\n]\r\n\r\n// 获取地理位置信息\r\n// navigator.geolocation.getCurrentPosition(position => {\r\n//   console.log('当前位置信息：', position)\r\n// })\r\n\r\n/* \r\n  1 打开百度地图JS API 定位文档 。\r\n  2 通过 IP 定位获取到当前城市名称。\r\n  3 调用我们服务器的接口，换取项目中的城市信息（有房源的城市的名称和id）。\r\n  4 将接口返回的城市信息展示在顶部导航栏中。\r\n*/\r\n\r\nexport default class Index extends React.Component {\r\n  state = {\r\n    // 轮播图状态数据\r\n    swipers: [],\r\n    isSwiperLoaded: false,\r\n\r\n    // 租房小组数据\r\n    groups: [],\r\n    // 最新资讯\r\n    news: [],\r\n    // 当前城市名称\r\n    curCityName: '上海'\r\n  }\r\n\r\n  // 获取轮播图数据的方法\r\n  async getSwipers() {\r\n    const res = await axios.get('http://localhost:8080/home/swiper')\r\n    this.setState({\r\n      swipers: res.data.body,\r\n      isSwiperLoaded: true\r\n    })\r\n  }\r\n\r\n  // 获取租房小组数据的方法\r\n  async getGroups() {\r\n    const res = await axios.get('http://localhost:8080/home/groups', {\r\n      params: {\r\n        area: 'AREA%7C88cff55c-aaa4-e2e0'\r\n      }\r\n    })\r\n\r\n    // console.log(res)\r\n    this.setState({\r\n      groups: res.data.body\r\n    })\r\n  }\r\n\r\n  // 获取最新资讯\r\n  async getNews() {\r\n    const res = await axios.get(\r\n      'http://localhost:8080/home/news?area=AREA%7C88cff55c-aaa4-e2e0'\r\n    )\r\n\r\n    this.setState({\r\n      news: res.data.body\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getSwipers()\r\n    this.getGroups()\r\n    this.getNews()\r\n\r\n    // 2 通过 IP 定位获取到当前城市名称。\r\n    // const curCity = new window.BMap.LocalCity()\r\n    // curCity.get(async res => {\r\n    //   // console.log('当前城市信息：', res)\r\n    //   const result = await axios.get(\r\n    //     `http://localhost:8080/area/info?name=${res.name}`\r\n    //   )\r\n    //   // console.log(result)\r\n    //   this.setState({\r\n    //     curCityName: result.data.body.label\r\n    //   })\r\n    // })\r\n\r\n    const curCity = await getCurrentCity()\r\n    this.setState({\r\n      curCityName: curCity.label\r\n    })\r\n  }\r\n\r\n  // 渲染轮播图结构\r\n  renderSwipers() {\r\n    return this.state.swipers.map(item => (\r\n      <a\r\n        key={item.id}\r\n        href=\"http://itcast.cn\"\r\n        style={{\r\n          display: 'inline-block',\r\n          width: '100%',\r\n          height: 212\r\n        }}\r\n      >\r\n        <img\r\n          src={BASE_URL + item.imgSrc}\r\n          alt=\"\"\r\n          style={{ width: '100%', verticalAlign: 'top' }}\r\n        />\r\n      </a>\r\n    ))\r\n  }\r\n\r\n  // 渲染导航菜单\r\n  renderNavs() {\r\n    return navs.map(item => (\r\n      <Flex.Item\r\n        key={item.id}\r\n        onClick={() => this.props.history.push(item.path)}\r\n      >\r\n        <img src={item.img} alt=\"\" />\r\n        <h2>{item.title}</h2>\r\n      </Flex.Item>\r\n    ))\r\n  }\r\n\r\n  // 渲染最新资讯\r\n  renderNews() {\r\n    return this.state.news.map(item => (\r\n      <div className=\"news-item\" key={item.id}>\r\n        <div className=\"imgwrap\">\r\n          <img\r\n            className=\"img\"\r\n            src={`http://localhost:8080${item.imgSrc}`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <Flex className=\"content\" direction=\"column\" justify=\"between\">\r\n          <h3 className=\"title\">{item.title}</h3>\r\n          <Flex className=\"info\" justify=\"between\">\r\n            <span>{item.from}</span>\r\n            <span>{item.date}</span>\r\n          </Flex>\r\n        </Flex>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"index\">\r\n        {/* 轮播图 */}\r\n        <div className=\"swiper\">\r\n          {this.state.isSwiperLoaded ? (\r\n            <Carousel autoplay infinite autoplayInterval={5000}>\r\n              {this.renderSwipers()}\r\n            </Carousel>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          {/* 搜索框 */}\r\n          <SearchHeader cityName={this.state.curCityName} />\r\n        </div>\r\n\r\n        {/* 导航菜单 */}\r\n        <Flex className=\"nav\">{this.renderNavs()}</Flex>\r\n\r\n        {/* 租房小组 */}\r\n        <div className=\"group\">\r\n          <h3 className=\"group-title\">\r\n            租房小组 <span className=\"more\">更多</span>\r\n          </h3>\r\n\r\n          {/* 宫格组件 */}\r\n          <Grid\r\n            data={this.state.groups}\r\n            columnNum={2}\r\n            square={false}\r\n            hasLine={false}\r\n            renderItem={item => (\r\n              <Flex className=\"group-item\" justify=\"around\" key={item.id}>\r\n                <div className=\"desc\">\r\n                  <p className=\"title\">{item.title}</p>\r\n                  <span className=\"info\">{item.desc}</span>\r\n                </div>\r\n                <img src={`http://localhost:8080${item.imgSrc}`} alt=\"\" />\r\n              </Flex>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        {/* 最新资讯 */}\r\n        <div className=\"news\">\r\n          <h3 className=\"group-title\">最新资讯</h3>\r\n          <WingBlank size=\"md\">{this.renderNews()}</WingBlank>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}