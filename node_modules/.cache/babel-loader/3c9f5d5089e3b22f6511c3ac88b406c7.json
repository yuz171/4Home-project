{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _Cascader = require('rmc-cascader/lib/Cascader');\n\nvar _Cascader2 = _interopRequireDefault(_Cascader);\n\nvar _MultiPicker = require('rmc-picker/lib/MultiPicker');\n\nvar _MultiPicker2 = _interopRequireDefault(_MultiPicker);\n\nvar _Picker = require('rmc-picker/lib/Picker');\n\nvar _Picker2 = _interopRequireDefault(_Picker);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/* tslint:disable:jsx-no-multiline-js */\n\n\nfunction getDefaultProps() {\n  return {\n    prefixCls: 'am-picker',\n    pickerPrefixCls: 'am-picker-col',\n    cols: 3,\n    cascade: true,\n    value: [],\n    onChange: function onChange() {}\n  };\n}\n\nvar PickerView = function (_React$Component) {\n  (0, _inherits3['default'])(PickerView, _React$Component);\n\n  function PickerView() {\n    (0, _classCallCheck3['default'])(this, PickerView);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));\n\n    _this.isMultiPicker = function () {\n      if (!_this.props.data) {\n        return false;\n      }\n\n      return Array.isArray(_this.props.data[0]);\n    };\n\n    _this.getCol = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          pickerPrefixCls = _this$props.pickerPrefixCls,\n          indicatorStyle = _this$props.indicatorStyle,\n          itemStyle = _this$props.itemStyle;\n      var formattedData = _this.isMultiPicker() ? data : [data];\n      return formattedData.map(function (col, index) {\n        return React.createElement(_Picker2['default'], {\n          key: index,\n          prefixCls: pickerPrefixCls,\n          style: {\n            flex: 1\n          },\n          indicatorStyle: indicatorStyle,\n          itemStyle: itemStyle\n        }, col.map(function (item) {\n          return React.createElement(_Picker2['default'].Item, {\n            key: item.value,\n            value: item.value\n          }, item.label);\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass3['default'])(PickerView, [{\n    key: 'render',\n    value: function render() {\n      // tslint:disable-next-line:no-this-assignment\n      var props = this.props;\n      var picker = void 0;\n\n      if (props.cascade) {\n        picker = React.createElement(_Cascader2['default'], {\n          prefixCls: props.prefixCls,\n          pickerPrefixCls: props.pickerPrefixCls,\n          data: props.data,\n          value: props.value,\n          onChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          cols: props.cols,\n          indicatorStyle: props.indicatorStyle,\n          pickerItemStyle: props.itemStyle\n        });\n      } else {\n        picker = React.createElement(_MultiPicker2['default'], {\n          prefixCls: props.prefixCls,\n          selectedValue: props.value,\n          onValueChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          style: {\n            flexDirection: 'row'\n          }\n        }, this.getCol());\n      }\n\n      return picker;\n    }\n  }]);\n  return PickerView;\n}(React.Component);\n\nexports['default'] = PickerView;\nPickerView.defaultProps = getDefaultProps();\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}