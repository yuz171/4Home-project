{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\components\\\\HousePackage\\\\index.js\";\nimport React, { Component } from 'react';\nimport styles from './index.module.css'; // 所有房屋配置项\n\nconst HOUSE_PACKAGE = [{\n  id: 1,\n  name: '衣柜',\n  icon: 'icon-wardrobe'\n}, {\n  id: 2,\n  name: '洗衣机',\n  icon: 'icon-wash'\n}, {\n  id: 3,\n  name: '空调',\n  icon: 'icon-air'\n}, {\n  id: 4,\n  name: '天然气',\n  icon: 'icon-gas'\n}, {\n  id: 5,\n  name: '冰箱',\n  icon: 'icon-ref'\n}, {\n  id: 6,\n  name: '暖气',\n  icon: 'icon-Heat'\n}, {\n  id: 7,\n  name: '电视',\n  icon: 'icon-vid'\n}, {\n  id: 8,\n  name: '热水器',\n  icon: 'icon-heater'\n}, {\n  id: 9,\n  name: '宽带',\n  icon: 'icon-broadband'\n}, {\n  id: 10,\n  name: '沙发',\n  icon: 'icon-sofa'\n}];\n/* \r\n  该组件的两种功能：\r\n  1 根据传入的 list 展示房屋配置列表（房源详情页面）\r\n    <HousePackage list={['衣柜', '洗衣机']} />\r\n  2 从所有配置列表中选择房屋配置（发布房源页面）\r\n    <HousePackage select onSelect={selectedItems => {...}} />\r\n*/\n\nclass HousePackage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 选中名称\n      selectedNames: [] // 根据id切换选中状态\n\n    };\n\n    this.toggleSelect = name => {\n      const selectedNames = this.state.selectedNames;\n      let newSelectedNames; // 判断该项是否选中\n\n      if (selectedNames.indexOf(name) > -1) {\n        // 选中：从数组中删除选中项，也就是保留未选中项\n        newSelectedNames = selectedNames.filter(item => item !== name);\n      } else {\n        // 未选中：添加到数组中\n        newSelectedNames = [...selectedNames, name];\n      } // 传递给父组件\n\n\n      this.props.onSelect(newSelectedNames);\n      this.setState({\n        selectedNames: newSelectedNames\n      });\n    };\n  }\n\n  // 渲染列表项\n  renderItems() {\n    const selectedNames = this.state.selectedNames; // select 的值为 true 表示 选择房屋配置；false 表示仅展示房屋列表\n    // list 表示要展示的列表项\n\n    const _this$props = this.props,\n          select = _this$props.select,\n          list = _this$props.list;\n    let data; // 如果传了 select 表示：选择 房屋配置\n    // 如果没传 select 表示：展示 房屋配置 列表\n\n    if (select) {\n      data = HOUSE_PACKAGE;\n    } else {\n      // 展示房屋配置列表\n      // 从所有的列表项中过滤出要展示的（list）列表项\n      data = HOUSE_PACKAGE.filter(v => list.includes(v.name));\n    }\n\n    return data.map(item => {\n      // 判断该项是否选中\n      const isSelected = selectedNames.indexOf(item.name) > -1;\n      return React.createElement(\"li\", {\n        key: item.id,\n        className: [styles.item, isSelected ? styles.active : ''].join(' '),\n        onClick: select && (() => this.toggleSelect(item.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"iconfont \".concat(item.icon, \" \").concat(styles.icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), item.name);\n    });\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.renderItems());\n  }\n\n} // 属性默认值，防止在使用该组件时，不传 onSelect 报错\n\n\nHousePackage.defaultProps = {\n  onSelect: () => {}\n};\nexport default HousePackage;","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\components\\HousePackage\\index.js"],"names":["React","Component","styles","HOUSE_PACKAGE","id","name","icon","HousePackage","state","selectedNames","toggleSelect","newSelectedNames","indexOf","filter","item","props","onSelect","setState","renderItems","select","list","data","v","includes","map","isSelected","active","join","render","root","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 所有房屋配置项\r\nconst HOUSE_PACKAGE = [\r\n  {\r\n    id: 1,\r\n    name: '衣柜',\r\n    icon: 'icon-wardrobe'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '洗衣机',\r\n    icon: 'icon-wash'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '空调',\r\n    icon: 'icon-air'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '天然气',\r\n    icon: 'icon-gas'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '冰箱',\r\n    icon: 'icon-ref'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '暖气',\r\n    icon: 'icon-Heat'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '电视',\r\n    icon: 'icon-vid'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '热水器',\r\n    icon: 'icon-heater'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '宽带',\r\n    icon: 'icon-broadband'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '沙发',\r\n    icon: 'icon-sofa'\r\n  }\r\n]\r\n\r\n/* \r\n  该组件的两种功能：\r\n  1 根据传入的 list 展示房屋配置列表（房源详情页面）\r\n    <HousePackage list={['衣柜', '洗衣机']} />\r\n  2 从所有配置列表中选择房屋配置（发布房源页面）\r\n    <HousePackage select onSelect={selectedItems => {...}} />\r\n*/\r\nclass HousePackage extends Component {\r\n  state = {\r\n    // 选中名称\r\n    selectedNames: []\r\n  }\r\n\r\n  // 根据id切换选中状态\r\n  toggleSelect = name => {\r\n    const { selectedNames } = this.state\r\n    let newSelectedNames\r\n\r\n    // 判断该项是否选中\r\n    if (selectedNames.indexOf(name) > -1) {\r\n      // 选中：从数组中删除选中项，也就是保留未选中项\r\n      newSelectedNames = selectedNames.filter(item => item !== name)\r\n    } else {\r\n      // 未选中：添加到数组中\r\n      newSelectedNames = [...selectedNames, name]\r\n    }\r\n\r\n    // 传递给父组件\r\n    this.props.onSelect(newSelectedNames)\r\n\r\n    this.setState({\r\n      selectedNames: newSelectedNames\r\n    })\r\n  }\r\n\r\n  // 渲染列表项\r\n  renderItems() {\r\n    const { selectedNames } = this.state\r\n    // select 的值为 true 表示 选择房屋配置；false 表示仅展示房屋列表\r\n    // list 表示要展示的列表项\r\n    const { select, list } = this.props\r\n\r\n    let data\r\n    // 如果传了 select 表示：选择 房屋配置\r\n    // 如果没传 select 表示：展示 房屋配置 列表\r\n    if (select) {\r\n      data = HOUSE_PACKAGE\r\n    } else {\r\n      // 展示房屋配置列表\r\n      // 从所有的列表项中过滤出要展示的（list）列表项\r\n      data = HOUSE_PACKAGE.filter(v => list.includes(v.name))\r\n    }\r\n\r\n    return data.map(item => {\r\n      // 判断该项是否选中\r\n      const isSelected = selectedNames.indexOf(item.name) > -1\r\n\r\n      return (\r\n        <li\r\n          key={item.id}\r\n          className={[styles.item, isSelected ? styles.active : ''].join(' ')}\r\n          onClick={select && (() => this.toggleSelect(item.name))}\r\n        >\r\n          <p>\r\n            <i className={`iconfont ${item.icon} ${styles.icon}`} />\r\n          </p>\r\n          {item.name}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return <ul className={styles.root}>{this.renderItems()}</ul>\r\n  }\r\n}\r\n\r\n// 属性默认值，防止在使用该组件时，不传 onSelect 报错\r\nHousePackage.defaultProps = {\r\n  onSelect: () => {}\r\n}\r\n\r\nexport default HousePackage\r\n"]},"metadata":{},"sourceType":"module"}