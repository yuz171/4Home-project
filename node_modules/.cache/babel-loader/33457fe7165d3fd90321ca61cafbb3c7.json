{"ast":null,"code":"import \"antd-mobile/lib/picker-view/style/css\";\nimport _PickerView from \"antd-mobile/lib/picker-view\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\HouseList\\\\components\\\\FilterPicker\\\\index.js\";\nimport React, { Component } from 'react';\nimport FilterFooter from '../../../../components/FilterFooter';\n/* \r\n  获取选中值：\r\n\r\n  1 在 FilterPicker 组件中，添加状态 value（用于获取 PickerView 组件的选中值）。\r\n  2 给 PickerView 组件添加配置项 onChange，通过参数获取到选中值，并更新状态 value。\r\n  3 在确定按钮的事件处理程序中，将 type 和 value 作为参数传递给父组件。\r\n*/\n\nexport default class FilterPicker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.defaultValue // constructor(props) {\n      //   super(props)\n      //   console.log('FilterPicker 创建了')\n      //   this.state = {\n      //     value: this.props.defaultValue\n      //   }\n      // }\n\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onCancel = _this$props.onCancel,\n          onSave = _this$props.onSave,\n          data = _this$props.data,\n          cols = _this$props.cols,\n          type = _this$props.type;\n    const value = this.state.value;\n    return React.createElement(React.Fragment, null, React.createElement(_PickerView, {\n      data: data,\n      value: value,\n      cols: cols,\n      onChange: val => {\n        this.setState({\n          value: val\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(FilterFooter, {\n      onCancel: () => onCancel(type),\n      onOk: () => onSave(type, value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterPicker\\index.js"],"names":["React","Component","FilterFooter","FilterPicker","state","value","props","defaultValue","render","onCancel","onSave","data","cols","type","val","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA;;;;;;;;AAQA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDG,KADkD,GAC1C;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,YADZ,CAGR;AACA;AACA;AACA;AACA;AACA;AACA;;AATQ,KAD0C;AAAA;;AAYlDC,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKF,KAD7C;AAAA,UACCG,QADD,eACCA,QADD;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,IADnB,eACmBA,IADnB;AAAA,UACyBC,IADzB,eACyBA,IADzB;AAAA,UAC+BC,IAD/B,eAC+BA,IAD/B;AAAA,UAECR,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAIP,WACE,0CAKE;AACE,MAAA,IAAI,EAAEM,IADR;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,IAAI,EAAEO,IAHR;AAIE,MAAA,QAAQ,EAAEE,GAAG,IAAI;AACf,aAAKC,QAAL,CAAc;AACZV,UAAAA,KAAK,EAAES;AADK,SAAd;AAGD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAiBE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,MAAML,QAAQ,CAACI,IAAD,CAD1B;AAEE,MAAA,IAAI,EAAE,MAAMH,MAAM,CAACG,IAAD,EAAOR,KAAP,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAwBD;;AAxCiD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { PickerView } from 'antd-mobile'\r\n\r\nimport FilterFooter from '../../../../components/FilterFooter'\r\n\r\n/* \r\n  获取选中值：\r\n\r\n  1 在 FilterPicker 组件中，添加状态 value（用于获取 PickerView 组件的选中值）。\r\n  2 给 PickerView 组件添加配置项 onChange，通过参数获取到选中值，并更新状态 value。\r\n  3 在确定按钮的事件处理程序中，将 type 和 value 作为参数传递给父组件。\r\n*/\r\n\r\nexport default class FilterPicker extends Component {\r\n  state = {\r\n    value: this.props.defaultValue\r\n  }\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   console.log('FilterPicker 创建了')\r\n  //   this.state = {\r\n  //     value: this.props.defaultValue\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const { onCancel, onSave, data, cols, type } = this.props\r\n    const { value } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* \r\n          选择器组件： \r\n          注意：一定要设置组件 value 属性的值，为当前选中状态的值，否则，无法实现切换选中项\r\n        */}\r\n        <PickerView\r\n          data={data}\r\n          value={value}\r\n          cols={cols}\r\n          onChange={val => {\r\n            this.setState({\r\n              value: val\r\n            })\r\n          }}\r\n        />\r\n\r\n        {/* 底部按钮 */}\r\n        <FilterFooter\r\n          onCancel={() => onCancel(type)}\r\n          onOk={() => onSave(type, value)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}