{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport \"antd-mobile/lib/wing-blank/style/css\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport \"antd-mobile/lib/white-space/style/css\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\Login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // 导入withFormik\n\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'; // 导入Yup\n\nimport * as Yup from 'yup'; // 导入 API\n\nimport { API } from '../../utils';\nimport NavHeader from '../../components/NavHeader';\nimport styles from './index.module.css'; // 验证规则：\n\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\n/* \r\n  简化表单处理：\r\n\r\n  1 导入 Form 组件，替换 form 元素，去掉 onSubmit。\r\n  2 导入 Field 组件，替换 input 表单元素，去掉 onChange、onBlur、value。\r\n  3 导入 ErrorMessage 组件，原来的错误消息逻辑代码。\r\n  4 去掉所有 props。\r\n*/\n\nclass Login extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(NavHeader, {\n      className: styles.navHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u8D26\\u53F7\\u767B\\u5F55\"), React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(_WingBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.formItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: styles.input,\n      name: \"username\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8D26\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(ErrorMessage, {\n      className: styles.error,\n      name: \"username\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.formItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: styles.input,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(ErrorMessage, {\n      className: styles.error,\n      name: \"password\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.submit,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\"))), React.createElement(_Flex, {\n      className: styles.backHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(_Flex.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/registe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u53F7\\uFF0C\\u53BB\\u6CE8\\u518C~\")))));\n  }\n\n} // 使用 withFormik 高阶组件包装 Login 组件，为 Login 组件提供属性和方法\n\n\nLogin = withFormik({\n  // 提供状态：\n  mapPropsToValues: () => ({\n    username: '',\n    password: ''\n  }),\n  // 添加表单校验规则\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('账号为必填项').matches(REG_UNAME, '长度为5到8位，只能出现数字、字母、下划线'),\n    password: Yup.string().required('密码为必填项').matches(REG_PWD, '长度为5到12位，只能出现数字、字母、下划线')\n  }),\n  // 表单的提交事件\n  handleSubmit: async (values, {\n    props\n  }) => {\n    // 获取账号和密码\n    const username = values.username,\n          password = values.password; // console.log('表单提交了', username, password)\n    // 发送请求\n\n    const res = await API.post('/user/login', {\n      username,\n      password\n    });\n    const _res$data = res.data,\n          status = _res$data.status,\n          body = _res$data.body,\n          description = _res$data.description;\n\n    if (status === 200) {\n      // 登录成功\n      localStorage.setItem('hkzf_token', body.token);\n      /* \r\n        1 登录成功后，判断是否需要跳转到用户想要访问的页面（判断 props.location.state 是否有值）。\r\n        2 如果不需要（没有值），则直接调用 history.go(-1) 返回上一页。\r\n        3 如果需要，就跳转到 from.pathname 指定的页面（推荐使用 replace 方法模式，而不是 push）。\r\n      */\n\n      if (!props.location.state) {\n        // 此时，表示是直接进入到了该页面，直接调用 go(-1) 即可\n        props.history.go(-1);\n      } else {\n        // push：[home, login, map]\n        // replace: [home, map]\n        props.history.replace(props.location.state.from.pathname);\n      } // 注意：无法在该方法中，通过 this 来获取到路由信息\n      // 所以，需要通过 第二个对象参数中获取到 props 来使用 props\n      // props.history.go(-1)\n\n    } else {\n      // 登录失败\n      _Toast.info(description, 2, null, false);\n    }\n  }\n})(Login); // 注意：此处返回的是 高阶组件 包装后的组件\n\nexport default Login;","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\Login\\index.js"],"names":["React","Component","Link","withFormik","Form","Field","ErrorMessage","Yup","API","NavHeader","styles","REG_UNAME","REG_PWD","Login","render","root","navHeader","formItem","input","error","formSubmit","submit","backHome","mapPropsToValues","username","password","validationSchema","object","shape","string","required","matches","handleSubmit","values","props","res","post","data","status","body","description","localStorage","setItem","token","location","state","history","go","replace","from","pathname","info"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Flex, WingBlank, WhiteSpace, Toast } from 'antd-mobile'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n// 导入withFormik\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n\r\n// 导入Yup\r\nimport * as Yup from 'yup'\r\n\r\n// 导入 API\r\nimport { API } from '../../utils'\r\n\r\nimport NavHeader from '../../components/NavHeader'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/\r\n\r\n/* \r\n  简化表单处理：\r\n\r\n  1 导入 Form 组件，替换 form 元素，去掉 onSubmit。\r\n  2 导入 Field 组件，替换 input 表单元素，去掉 onChange、onBlur、value。\r\n  3 导入 ErrorMessage 组件，原来的错误消息逻辑代码。\r\n  4 去掉所有 props。\r\n*/\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavHeader className={styles.navHeader}>账号登录</NavHeader>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <Form>\r\n            {/* 账号 */}\r\n            <div className={styles.formItem}>\r\n              <Field\r\n                className={styles.input}\r\n                name=\"username\"\r\n                placeholder=\"请输入账号\"\r\n              />\r\n            </div>\r\n            <ErrorMessage\r\n              className={styles.error}\r\n              name=\"username\"\r\n              component=\"div\"\r\n            />\r\n            {/* 密码 */}\r\n            <div className={styles.formItem}>\r\n              <Field\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            </div>\r\n            <ErrorMessage\r\n              className={styles.error}\r\n              name=\"password\"\r\n              component=\"div\"\r\n            />\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </Form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 使用 withFormik 高阶组件包装 Login 组件，为 Login 组件提供属性和方法\r\nLogin = withFormik({\r\n  // 提供状态：\r\n  mapPropsToValues: () => ({ username: '', password: '' }),\r\n\r\n  // 添加表单校验规则\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n      .required('账号为必填项')\r\n      .matches(REG_UNAME, '长度为5到8位，只能出现数字、字母、下划线'),\r\n    password: Yup.string()\r\n      .required('密码为必填项')\r\n      .matches(REG_PWD, '长度为5到12位，只能出现数字、字母、下划线')\r\n  }),\r\n\r\n  // 表单的提交事件\r\n  handleSubmit: async (values, { props }) => {\r\n    // 获取账号和密码\r\n    const { username, password } = values\r\n\r\n    // console.log('表单提交了', username, password)\r\n    // 发送请求\r\n    const res = await API.post('/user/login', {\r\n      username,\r\n      password\r\n    })\r\n\r\n    const { status, body, description } = res.data\r\n\r\n    if (status === 200) {\r\n      // 登录成功\r\n      localStorage.setItem('hkzf_token', body.token)\r\n\r\n      /* \r\n        1 登录成功后，判断是否需要跳转到用户想要访问的页面（判断 props.location.state 是否有值）。\r\n        2 如果不需要（没有值），则直接调用 history.go(-1) 返回上一页。\r\n        3 如果需要，就跳转到 from.pathname 指定的页面（推荐使用 replace 方法模式，而不是 push）。\r\n      */\r\n      if (!props.location.state) {\r\n        // 此时，表示是直接进入到了该页面，直接调用 go(-1) 即可\r\n        props.history.go(-1)\r\n      } else {\r\n        // push：[home, login, map]\r\n        // replace: [home, map]\r\n        props.history.replace(props.location.state.from.pathname)\r\n      }\r\n      // 注意：无法在该方法中，通过 this 来获取到路由信息\r\n      // 所以，需要通过 第二个对象参数中获取到 props 来使用 props\r\n      // props.history.go(-1)\r\n    } else {\r\n      // 登录失败\r\n      Toast.info(description, 2, null, false)\r\n    }\r\n  }\r\n})(Login)\r\n\r\n// 注意：此处返回的是 高阶组件 包装后的组件\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}