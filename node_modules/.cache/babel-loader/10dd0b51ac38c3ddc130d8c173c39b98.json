{"ast":null,"code":"import \"antd-mobile/lib/search-bar/style/css\";\nimport _SearchBar from \"antd-mobile/lib/search-bar\";\nvar _jsxFileName = \"E:\\\\react-project\\\\hkzf-mobile\\\\src\\\\pages\\\\Rent\\\\Search\\\\index.js\";\nimport React, { Component } from 'react';\nimport { getCity, API } from '../../../utils';\nimport styles from './index.module.css';\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cityId = getCity().value;\n    this.timerId = null;\n    this.state = {\n      // 搜索框的值\n      searchTxt: '',\n      tipsList: []\n      /* \r\n        传递小区数据：\r\n          1 给搜索列表项添加单击事件。\r\n        2 在事件处理程序中，调用 history.replace() 方法跳转到发布房源页面。\r\n        3 将被点击的小区信息作为数据一起传递过去。\r\n          4 在发布房源页面，判断 history.loaction.state 是否为空。\r\n        5 如果为空，不做任何处理。\r\n        6 如果不为空，则将小区信息存储到发布房源页面的状态中。\r\n      */\n\n    };\n\n    this.onTipsClick = item => {\n      this.props.history.replace('/rent/add', {\n        name: item.communityName,\n        id: item.community\n      });\n    };\n\n    this.renderTips = () => {\n      const tipsList = this.state.tipsList;\n      return tipsList.map(item => React.createElement(\"li\", {\n        key: item.community,\n        className: styles.tip,\n        onClick: () => this.onTipsClick(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, item.communityName));\n    };\n\n    this.handleSearchTxt = value => {\n      this.setState({\n        searchTxt: value\n      });\n\n      if (!value) {\n        // 文本框的值为空\n        return this.setState({\n          tipsList: []\n        });\n      } // 清除上一次的定时器\n\n\n      clearTimeout(this.timerId);\n      this.timerId = setTimeout(async () => {\n        // 获取小区数据\n        const res = await API.get('/area/community', {\n          params: {\n            name: value,\n            id: this.cityId\n          }\n        }); // console.log(res)\n\n        this.setState({\n          tipsList: res.data.body\n        });\n      }, 500);\n    };\n  }\n\n  render() {\n    const history = this.props.history;\n    const searchTxt = this.state.searchTxt;\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(_SearchBar, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5C0F\\u533A\\u6216\\u5730\\u5740\",\n      value: searchTxt,\n      onChange: this.handleSearchTxt,\n      showCancelButton: true,\n      onCancel: () => history.replace('/rent/add'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: styles.tips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.renderTips()));\n  }\n\n}","map":{"version":3,"sources":["E:\\react-project\\hkzf-mobile\\src\\pages\\Rent\\Search\\index.js"],"names":["React","Component","getCity","API","styles","Search","cityId","value","timerId","state","searchTxt","tipsList","onTipsClick","item","props","history","replace","name","communityName","id","community","renderTips","map","tip","handleSearchTxt","setState","clearTimeout","setTimeout","res","get","params","data","body","render","root","tips"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,gBAA7B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE5CK,MAF4C,GAEnCJ,OAAO,GAAGK,KAFyB;AAAA,SAI5CC,OAJ4C,GAIlC,IAJkC;AAAA,SAM5CC,KAN4C,GAMpC;AACN;AACAC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,QAAQ,EAAE;AAGZ;;;;;;;;;;AANQ,KANoC;;AAAA,SAuB5CC,WAvB4C,GAuB9BC,IAAI,IAAI;AACpB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,WAA3B,EAAwC;AACtCC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,aAD2B;AAEtCC,QAAAA,EAAE,EAAEN,IAAI,CAACO;AAF6B,OAAxC;AAID,KA5B2C;;AAAA,SA+B5CC,UA/B4C,GA+B/B,MAAM;AAAA,YACTV,QADS,GACI,KAAKF,KADT,CACTE,QADS;AAGjB,aAAOA,QAAQ,CAACW,GAAT,CAAaT,IAAI,IACtB;AACE,QAAA,GAAG,EAAEA,IAAI,CAACO,SADZ;AAEE,QAAA,SAAS,EAAEhB,MAAM,CAACmB,GAFpB;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKX,WAAL,CAAiBC,IAAjB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,IAAI,CAACK,aALR,CADK,CAAP;AASD,KA3C2C;;AAAA,SAgD5CM,eAhD4C,GAgD1BjB,KAAK,IAAI;AACzB,WAAKkB,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAEH;AAAb,OAAd;;AAEA,UAAI,CAACA,KAAL,EAAY;AACV;AACA,eAAO,KAAKkB,QAAL,CAAc;AACnBd,UAAAA,QAAQ,EAAE;AADS,SAAd,CAAP;AAGD,OARwB,CAUzB;;;AACAe,MAAAA,YAAY,CAAC,KAAKlB,OAAN,CAAZ;AAEA,WAAKA,OAAL,GAAemB,UAAU,CAAC,YAAY;AACpC;AACA,cAAMC,GAAG,GAAG,MAAMzB,GAAG,CAAC0B,GAAJ,CAAQ,iBAAR,EAA2B;AAC3CC,UAAAA,MAAM,EAAE;AACNb,YAAAA,IAAI,EAAEV,KADA;AAENY,YAAAA,EAAE,EAAE,KAAKb;AAFH;AADmC,SAA3B,CAAlB,CAFoC,CASpC;;AAEA,aAAKmB,QAAL,CAAc;AACZd,UAAAA,QAAQ,EAAEiB,GAAG,CAACG,IAAJ,CAASC;AADP,SAAd;AAGD,OAdwB,EActB,GAdsB,CAAzB;AAeD,KA5E2C;AAAA;;AA8E5CC,EAAAA,MAAM,GAAG;AAAA,UACClB,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,UAECL,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAEN,MAAM,CAAC8B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,WAAW,EAAC,kDADd;AAEE,MAAA,KAAK,EAAExB,SAFT;AAGE,MAAA,QAAQ,EAAE,KAAKc,eAHjB;AAIE,MAAA,gBAAgB,EAAE,IAJpB;AAKE,MAAA,QAAQ,EAAE,MAAMT,OAAO,CAACC,OAAR,CAAgB,WAAhB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE;AAAI,MAAA,SAAS,EAAEZ,MAAM,CAAC+B,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKd,UAAL,EAA7B,CAXF,CADF;AAeD;;AAjG2C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { SearchBar } from 'antd-mobile'\r\n\r\nimport { getCity, API } from '../../../utils'\r\n\r\nimport styles from './index.module.css'\r\n\r\nexport default class Search extends Component {\r\n  // 当前城市id\r\n  cityId = getCity().value\r\n  // 定时器id\r\n  timerId = null\r\n\r\n  state = {\r\n    // 搜索框的值\r\n    searchTxt: '',\r\n    tipsList: []\r\n  }\r\n\r\n  /* \r\n    传递小区数据：\r\n\r\n    1 给搜索列表项添加单击事件。\r\n    2 在事件处理程序中，调用 history.replace() 方法跳转到发布房源页面。\r\n    3 将被点击的小区信息作为数据一起传递过去。\r\n\r\n    4 在发布房源页面，判断 history.loaction.state 是否为空。\r\n    5 如果为空，不做任何处理。\r\n    6 如果不为空，则将小区信息存储到发布房源页面的状态中。\r\n  */\r\n  onTipsClick = item => {\r\n    this.props.history.replace('/rent/add', {\r\n      name: item.communityName,\r\n      id: item.community\r\n    })\r\n  }\r\n\r\n  // 渲染搜索结果列表\r\n  renderTips = () => {\r\n    const { tipsList } = this.state\r\n\r\n    return tipsList.map(item => (\r\n      <li\r\n        key={item.community}\r\n        className={styles.tip}\r\n        onClick={() => this.onTipsClick(item)}\r\n      >\r\n        {item.communityName}\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  /* \r\n    关键词搜索小区信息\r\n  */\r\n  handleSearchTxt = value => {\r\n    this.setState({ searchTxt: value })\r\n\r\n    if (!value) {\r\n      // 文本框的值为空\r\n      return this.setState({\r\n        tipsList: []\r\n      })\r\n    }\r\n\r\n    // 清除上一次的定时器\r\n    clearTimeout(this.timerId)\r\n\r\n    this.timerId = setTimeout(async () => {\r\n      // 获取小区数据\r\n      const res = await API.get('/area/community', {\r\n        params: {\r\n          name: value,\r\n          id: this.cityId\r\n        }\r\n      })\r\n\r\n      // console.log(res)\r\n\r\n      this.setState({\r\n        tipsList: res.data.body\r\n      })\r\n    }, 500)\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props\r\n    const { searchTxt } = this.state\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 搜索框 */}\r\n        <SearchBar\r\n          placeholder=\"请输入小区或地址\"\r\n          value={searchTxt}\r\n          onChange={this.handleSearchTxt}\r\n          showCancelButton={true}\r\n          onCancel={() => history.replace('/rent/add')}\r\n        />\r\n\r\n        {/* 搜索提示列表 */}\r\n        <ul className={styles.tips}>{this.renderTips()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}