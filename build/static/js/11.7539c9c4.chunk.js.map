{"version":3,"sources":["components/HouseItem/index.js","components/HouseItem/index.module.css","components/NoHouse/index.js","components/NoHouse/index.module.css","pages/HouseList/components/FilterTitle/index.module.css","components/FilterFooter/index.module.css","pages/HouseList/components/FilterMore/index.module.css","pages/HouseList/components/Filter/index.module.css","components/Sticky/index.module.css","pages/HouseList/index.module.css","pages/HouseList/components/FilterTitle/index.js","components/FilterFooter/index.js","pages/HouseList/components/FilterPicker/index.js","pages/HouseList/components/FilterMore/index.js","pages/HouseList/components/Filter/index.js","components/Sticky/index.js","pages/HouseList/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_index_module_css__WEBPACK_IMPORTED_MODULE_1__","_index_module_css__WEBPACK_IMPORTED_MODULE_1___default","HouseItem","_ref","src","title","desc","tags","price","onClick","style","a","createElement","className","styles","house","imgWrap","img","alt","content","map","tag","index","tagClass","join","key","priceNum","module","exports","tag1","tag2","tag3","_utils_url__WEBPACK_IMPORTED_MODULE_1__","_index_module_css__WEBPACK_IMPORTED_MODULE_2__","_index_module_css__WEBPACK_IMPORTED_MODULE_2___default","NoHouse","children","root","BASE_URL","msg","dropdown","selected","btn","cancel","ok","mask","tagActive","dl","dt","dd","footer","fixed","header","searchHeader","houseItems","loading","titleList","type","FilterTitle","titleSelectedStatus","react_default","flex_default","align","item","isSelected","Item","FilterFooter","_ref$cancelText","cancelText","_ref$okText","okText","onCancel","onOk","FilterPicker","state","value","_this","props","defaultValue","_this2","this","_this$props","onSave","data","cols","Fragment","picker_view_default","onChange","val","setState","components_FilterFooter","Component","FilterMore","selectedValues","newSelectedValues","Object","toConsumableArray","indexOf","push","findIndex","splice","onTagClick","label","_this3","_this$props2","_this$props2$data","roomType","oriented","floor","characteristic","isOpen","renderprops","to","opacity","transform","concat","renderFilters","area","mode","more","Filter","openType","filtersData","subway","rentType","onTitleClick","htmlBody","_this$state","newTitleSelectedStatus","objectSpread","keys","forEach","selectedVal","length","_this$state2","defineProperty","filters","areaKey","areaValue","onFilter","document","body","getFiltersData","JSON","parse","localStorage","getItem","API","get","res","_this$state3","_this$state3$filtersD","FilterPicker_FilterPicker","_this$state4","_this$state4$filtersD","FilterMore_FilterMore","isHide","from","renderMask","renderFilterPicker","renderFilterMore","Sticky","placeholder","createRef","handleScroll","height","placeholderEl","current","contentEl","getBoundingClientRect","top","classList","add","remove","window","addEventListener","removeEventListener","ref","HouseList","list","count","isLoading","scrollTo","searchHouseList","renderHouseList","history","houseCode","houseImg","isRowLoaded","_ref2","loadMoreRows","_ref3","startIndex","stopIndex","Promise","resolve","params","cityId","start","end","then","getCurrentCity","toast_default","hide","info","es","rowCount","_ref5","onRowsRendered","registerChild","_ref6","isScrolling","scrollTop","_ref7","width","autoHeight","rowHeight","rowRenderer","go","SearchHeader","cityName","components_Sticky","Filter_Filter","renderList","React"],"mappings":"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","file":"static/js/11.7539c9c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from './index.module.css'\r\n\r\nfunction HouseItem({ src, title, desc, tags, price, onClick, style }) {\r\n  return (\r\n    <div className={styles.house} onClick={onClick} style={style}>\r\n      <div className={styles.imgWrap}>\r\n        <img className={styles.img} src={src} alt=\"\" />\r\n      </div>\r\n      <div className={styles.content}>\r\n        <h3 className={styles.title}>{title}</h3>\r\n        <div className={styles.desc}>{desc}</div>\r\n        <div>\r\n          {/* ['近地铁', '随时看房'] */}\r\n          {tags.map((tag, index) => {\r\n            const tagClass = 'tag' + (index + 1)\r\n            return (\r\n              <span\r\n                className={[styles.tag, styles[tagClass]].join(' ')}\r\n                key={tag}\r\n              >\r\n                {tag}\r\n              </span>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={styles.price}>\r\n          <span className={styles.priceNum}>{price}</span> 元/月\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nHouseItem.propTypes = {\r\n  src: PropTypes.string,\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  tags: PropTypes.array.isRequired,\r\n  price: PropTypes.number,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default HouseItem\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"house\":\"HouseItem_house__be4Qb\",\"imgWrap\":\"HouseItem_imgWrap__SIlkZ\",\"img\":\"HouseItem_img__2lVHp\",\"content\":\"HouseItem_content__22xWw\",\"title\":\"HouseItem_title__VwJd0\",\"desc\":\"HouseItem_desc__2XrWx\",\"price\":\"HouseItem_price__2Rjdk\",\"priceNum\":\"HouseItem_priceNum__1s7f0\",\"tag\":\"HouseItem_tag__W8aOC\",\"tag1\":\"HouseItem_tag1__3n76l\",\"tag2\":\"HouseItem_tag2__1LdTj\",\"tag3\":\"HouseItem_tag3__1FZMt\"};","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { BASE_URL } from '../../utils/url'\r\nimport styles from './index.module.css'\r\n\r\nconst NoHouse = ({ children }) => (\r\n  <div className={styles.root}>\r\n    <img\r\n      className={styles.img}\r\n      src={BASE_URL + '/img/not-found.png'}\r\n      alt=\"暂无数据\"\r\n    />\r\n    <p className={styles.msg}>{children}</p>\r\n  </div>\r\n)\r\n\r\nNoHouse.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default NoHouse\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NoHouse_root__1RY4o\",\"img\":\"NoHouse_img__1ZVUm\",\"msg\":\"NoHouse_msg__3sRc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FilterTitle_root__15nnk\",\"dropdown\":\"FilterTitle_dropdown__G5Lz0\",\"selected\":\"FilterTitle_selected__kSPMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FilterFooter_root__25TqY\",\"btn\":\"FilterFooter_btn__qe3Eu\",\"cancel\":\"FilterFooter_cancel__1d1af\",\"ok\":\"FilterFooter_ok__1btyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FilterMore_root__w9l0d\",\"mask\":\"FilterMore_mask__qldQ3\",\"tags\":\"FilterMore_tags__3xKHS\",\"tag\":\"FilterMore_tag__3q51Z\",\"tagActive\":\"FilterMore_tagActive__JjwHQ\",\"dl\":\"FilterMore_dl__Iw0X5\",\"dt\":\"FilterMore_dt__19X4-\",\"dd\":\"FilterMore_dd__2kKTw\",\"footer\":\"FilterMore_footer__FC9W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Filter_root__1LUHC\",\"mask\":\"Filter_mask___kND1\",\"content\":\"Filter_content__2lsTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"Sticky_fixed__1D_Iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HouseList_root__qXPAA\",\"header\":\"HouseList_header__y-T0_\",\"searchHeader\":\"HouseList_searchHeader__8s16x\",\"houseItems\":\"HouseList_houseItems__3v1Qd\",\"loading\":\"HouseList_loading__3fgy1\"};","import React from 'react'\r\n\r\nimport { Flex } from 'antd-mobile'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 条件筛选栏标题数组：\r\nconst titleList = [\r\n  { title: '区域', type: 'area' },\r\n  { title: '方式', type: 'mode' },\r\n  { title: '租金', type: 'price' },\r\n  { title: '筛选', type: 'more' }\r\n]\r\n\r\n/* \r\n  1 通过 props 接收，高亮状态对象 titleSelectedStatus。\r\n  2 遍历 titleList 数组，渲染标题列表。\r\n  3 判断高亮对象中当前标题是否高亮，如果是，就添加高亮类。\r\n\r\n  4 给标题项绑定单击事件，在事件中调用父组件传过来的方法 onClick。\r\n  5 将当前标题 type，通过 onClick 的参数，传递给父组件。\r\n  6 父组件中接收到当前 type，修改该标题的选中状态为true。\r\n*/\r\n\r\nexport default function FilterTitle({ titleSelectedStatus, onClick }) {\r\n  return (\r\n    <Flex align=\"center\" className={styles.root}>\r\n      {titleList.map(item => {\r\n        // item.type => 'area'\r\n        const isSelected = titleSelectedStatus[item.type]\r\n        return (\r\n          <Flex.Item key={item.type} onClick={() => onClick(item.type)}>\r\n            {/* 选中类名： selected */}\r\n            <span\r\n              className={[\r\n                styles.dropdown,\r\n                isSelected ? styles.selected : ''\r\n              ].join(' ')}\r\n            >\r\n              <span>{item.title}</span>\r\n              <i className=\"iconfont icon-arrow\" />\r\n            </span>\r\n          </Flex.Item>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Flex } from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from './index.module.css'\r\n\r\nfunction FilterFooter({\r\n  cancelText = '取消',\r\n  okText = '确定',\r\n  onCancel,\r\n  onOk,\r\n  className,\r\n  style\r\n}) {\r\n  return (\r\n    <Flex style={style} className={[styles.root, className || ''].join(' ')}>\r\n      {/* 取消按钮 */}\r\n      <span\r\n        className={[styles.btn, styles.cancel].join(' ')}\r\n        onClick={onCancel}\r\n      >\r\n        {cancelText}\r\n      </span>\r\n\r\n      {/* 确定按钮 */}\r\n      <span className={[styles.btn, styles.ok].join(' ')} onClick={onOk}>\r\n        {okText}\r\n      </span>\r\n    </Flex>\r\n  )\r\n}\r\n\r\n// props校验\r\nFilterFooter.propTypes = {\r\n  cancelText: PropTypes.string,\r\n  okText: PropTypes.string,\r\n  onCancel: PropTypes.func,\r\n  onOk: PropTypes.func,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default FilterFooter\r\n","import React, { Component } from 'react'\r\n\r\nimport { PickerView } from 'antd-mobile'\r\n\r\nimport FilterFooter from '../../../../components/FilterFooter'\r\n\r\n/* \r\n  获取选中值：\r\n\r\n  1 在 FilterPicker 组件中，添加状态 value（用于获取 PickerView 组件的选中值）。\r\n  2 给 PickerView 组件添加配置项 onChange，通过参数获取到选中值，并更新状态 value。\r\n  3 在确定按钮的事件处理程序中，将 type 和 value 作为参数传递给父组件。\r\n*/\r\n\r\nexport default class FilterPicker extends Component {\r\n  state = {\r\n    value: this.props.defaultValue\r\n  }\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   console.log('FilterPicker 创建了')\r\n  //   this.state = {\r\n  //     value: this.props.defaultValue\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const { onCancel, onSave, data, cols, type } = this.props\r\n    const { value } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* \r\n          选择器组件： \r\n          注意：一定要设置组件 value 属性的值，为当前选中状态的值，否则，无法实现切换选中项\r\n        */}\r\n        <PickerView\r\n          data={data}\r\n          value={value}\r\n          cols={cols}\r\n          onChange={val => {\r\n            this.setState({\r\n              value: val\r\n            })\r\n          }}\r\n        />\r\n\r\n        {/* 底部按钮 */}\r\n        <FilterFooter\r\n          onCancel={() => onCancel(type)}\r\n          onOk={() => onSave(type, value)}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nimport FilterFooter from '../../../../components/FilterFooter'\r\n\r\nimport styles from './index.module.css'\r\n\r\nexport default class FilterMore extends Component {\r\n  state = {\r\n    selectedValues: this.props.defaultValue\r\n  }\r\n\r\n  // 标签点击事件\r\n  onTagClick(value) {\r\n    const { selectedValues } = this.state\r\n    // 创建新数组\r\n    const newSelectedValues = [...selectedValues]\r\n\r\n    if (newSelectedValues.indexOf(value) <= -1) {\r\n      // 没有当前项的值\r\n      newSelectedValues.push(value)\r\n    } else {\r\n      // 有\r\n      const index = newSelectedValues.findIndex(item => item === value)\r\n      newSelectedValues.splice(index, 1)\r\n    }\r\n\r\n    this.setState({\r\n      selectedValues: newSelectedValues\r\n    })\r\n  }\r\n\r\n  // 渲染标签\r\n  renderFilters(data) {\r\n    const { selectedValues } = this.state\r\n    // 高亮类名： styles.tagActive\r\n    return data.map(item => {\r\n      const isSelected = selectedValues.indexOf(item.value) > -1\r\n\r\n      return (\r\n        <span\r\n          key={item.value}\r\n          className={[styles.tag, isSelected ? styles.tagActive : ''].join(' ')}\r\n          onClick={() => this.onTagClick(item.value)}\r\n        >\r\n          {item.label}\r\n        </span>\r\n      )\r\n    })\r\n  }\r\n\r\n  // 取消按钮的事件处理程序\r\n  onCancel = () => {\r\n    this.setState({\r\n      selectedValues: []\r\n    })\r\n  }\r\n\r\n  // 确定按钮的事件处理程序\r\n  onOk = () => {\r\n    const { type, onSave } = this.props\r\n    // onSave 是父组件中的方法\r\n    onSave(type, this.state.selectedValues)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data: { roomType, oriented, floor, characteristic },\r\n      onCancel,\r\n      type\r\n    } = this.props\r\n\r\n    // 该组件是否展示\r\n    const isOpen = type === 'more'\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 遮罩层 */}\r\n        <Spring to={{ opacity: isOpen ? 1 : 0 }}>\r\n          {props => {\r\n            if (props.opacity === 0) {\r\n              return null\r\n            }\r\n\r\n            return (\r\n              <div\r\n                style={props}\r\n                className={styles.mask}\r\n                onClick={() => onCancel(type)}\r\n              />\r\n            )\r\n          }}\r\n        </Spring>\r\n\r\n        <Spring\r\n          to={{ transform: `translate(${isOpen ? '0px' : '100%'}, 0px)` }}\r\n        >\r\n          {props => {\r\n            return (\r\n              <>\r\n                {/* 条件内容 */}\r\n                <div style={props} className={styles.tags}>\r\n                  <dl className={styles.dl}>\r\n                    <dt className={styles.dt}>户型</dt>\r\n                    <dd className={styles.dd}>\r\n                      {this.renderFilters(roomType)}\r\n                    </dd>\r\n\r\n                    <dt className={styles.dt}>朝向</dt>\r\n                    <dd className={styles.dd}>\r\n                      {this.renderFilters(oriented)}\r\n                    </dd>\r\n\r\n                    <dt className={styles.dt}>楼层</dt>\r\n                    <dd className={styles.dd}>{this.renderFilters(floor)}</dd>\r\n\r\n                    <dt className={styles.dt}>房屋亮点</dt>\r\n                    <dd className={styles.dd}>\r\n                      {this.renderFilters(characteristic)}\r\n                    </dd>\r\n                  </dl>\r\n                </div>\r\n\r\n                {/* 底部按钮 */}\r\n                <FilterFooter\r\n                  style={props}\r\n                  className={styles.footer}\r\n                  cancelText=\"清除\"\r\n                  onCancel={this.onCancel}\r\n                  onOk={this.onOk}\r\n                />\r\n              </>\r\n            )\r\n          }}\r\n        </Spring>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// 导入 Spring 组件\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nimport FilterTitle from '../FilterTitle'\r\nimport FilterPicker from '../FilterPicker'\r\nimport FilterMore from '../FilterMore'\r\n\r\n// 导入自定义的axios\r\nimport { API } from '../../../../utils/api'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 标题高亮状态\r\n// true 表示高亮； false 表示不高亮\r\nconst titleSelectedStatus = {\r\n  area: false,\r\n  mode: false,\r\n  price: false,\r\n  more: false\r\n}\r\n\r\n// FilterPicker 和 FilterMore 组件的选中值\r\nconst selectedValues = {\r\n  area: ['area', 'null'],\r\n  mode: ['null'],\r\n  price: ['null'],\r\n  more: []\r\n}\r\n\r\nexport default class Filter extends Component {\r\n  state = {\r\n    titleSelectedStatus,\r\n    // 控制 FilterPicker 或 FilterMore 组件的展示或隐藏\r\n    openType: '',\r\n    // 所有筛选条件数据\r\n    filtersData: {\r\n      // FilterMore\r\n      roomType: [],\r\n      oriented: [],\r\n      floor: [],\r\n      characteristic: [],\r\n      // FilterPicker\r\n      area: {},\r\n      subway: {},\r\n      rentType: [],\r\n      price: []\r\n    },\r\n    // 筛选条件的选中值\r\n    selectedValues\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 获取到body\r\n    this.htmlBody = document.body\r\n\r\n    this.getFiltersData()\r\n  }\r\n\r\n  // 封装获取所有筛选条件的方法\r\n  async getFiltersData() {\r\n    // 获取当前定位城市id\r\n    const { value } = JSON.parse(localStorage.getItem('hkzf_city'))\r\n    const res = await API.get(`/houses/condition?id=${value}`)\r\n\r\n    this.setState({\r\n      filtersData: res.data.body\r\n    })\r\n  }\r\n\r\n  // 点击标题菜单实现高亮\r\n  // 注意：this指向的问题！！！\r\n  // 说明：要实现完整的功能，需要后续的组件配合完成！\r\n  onTitleClick = type => {\r\n    // 给 body 添加样式\r\n    this.htmlBody.className = 'body-fixed'\r\n\r\n    const { titleSelectedStatus, selectedValues } = this.state\r\n    // 创建新的标题选中状态对象\r\n    const newTitleSelectedStatus = { ...titleSelectedStatus }\r\n\r\n    // 遍历标题选中状态对象\r\n    // Object.keys() => ['area', 'mode', 'price', 'more']\r\n    Object.keys(titleSelectedStatus).forEach(key => {\r\n      // key 表示数组中的每一项，此处，就是每个标题的 type 值。\r\n      if (key === type) {\r\n        // 当前标题\r\n        newTitleSelectedStatus[type] = true\r\n        return\r\n      }\r\n\r\n      // 其他标题：\r\n      const selectedVal = selectedValues[key]\r\n      if (\r\n        key === 'area' &&\r\n        (selectedVal.length !== 2 || selectedVal[0] !== 'area')\r\n      ) {\r\n        // 高亮\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'mode' && selectedVal[0] !== 'null') {\r\n        // 高亮\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'price' && selectedVal[0] !== 'null') {\r\n        // 高亮\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'more' && selectedVal.length !== 0) {\r\n        // 更多选择项 FilterMore 组件\r\n        newTitleSelectedStatus[key] = true\r\n      } else {\r\n        newTitleSelectedStatus[key] = false\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      // 展示对话框\r\n      openType: type,\r\n      // 使用新的标题选中状态对象来更新\r\n      titleSelectedStatus: newTitleSelectedStatus\r\n    })\r\n  }\r\n\r\n  // 取消（隐藏对话框）\r\n  onCancel = type => {\r\n    this.htmlBody.className = ''\r\n\r\n    const { titleSelectedStatus, selectedValues } = this.state\r\n    // 创建新的标题选中状态对象\r\n    const newTitleSelectedStatus = { ...titleSelectedStatus }\r\n\r\n    // 菜单高亮逻辑处理\r\n    const selectedVal = selectedValues[type]\r\n    if (\r\n      type === 'area' &&\r\n      (selectedVal.length !== 2 || selectedVal[0] !== 'area')\r\n    ) {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'mode' && selectedVal[0] !== 'null') {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'price' && selectedVal[0] !== 'null') {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'more' && selectedVal.length !== 0) {\r\n      // 更多选择项 FilterMore 组件\r\n      newTitleSelectedStatus[type] = true\r\n    } else {\r\n      newTitleSelectedStatus[type] = false\r\n    }\r\n\r\n    // 隐藏对话框\r\n    this.setState({\r\n      openType: '',\r\n\r\n      // 更新菜单高亮状态数据\r\n      titleSelectedStatus: newTitleSelectedStatus\r\n    })\r\n  }\r\n\r\n  // 确定（隐藏对话框）\r\n  onSave = (type, value) => {\r\n    this.htmlBody.className = ''\r\n\r\n    const { titleSelectedStatus } = this.state\r\n    // 创建新的标题选中状态对象\r\n    const newTitleSelectedStatus = { ...titleSelectedStatus }\r\n\r\n    // 菜单高亮逻辑处理\r\n    const selectedVal = value\r\n    if (\r\n      type === 'area' &&\r\n      (selectedVal.length !== 2 || selectedVal[0] !== 'area')\r\n    ) {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'mode' && selectedVal[0] !== 'null') {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'price' && selectedVal[0] !== 'null') {\r\n      // 高亮\r\n      newTitleSelectedStatus[type] = true\r\n    } else if (type === 'more' && selectedVal.length !== 0) {\r\n      // 更多选择项 FilterMore 组件\r\n      newTitleSelectedStatus[type] = true\r\n    } else {\r\n      newTitleSelectedStatus[type] = false\r\n    }\r\n\r\n    /* \r\n      组装筛选条件：\r\n\r\n      1 在 Filter 组件的 onSave 方法中，根据最新 selectedValues 组装筛选条件数据 filters。\r\n      2 获取区域数据的参数名：area 或 subway（选中值数组的第一个元素）。\r\n      3 获取区域数据的值（以最后一个 value 为准）。\r\n      4 获取方式和租金的值（选中值的第一个元素）。\r\n      5 获取筛选（more）的值（将选中值数组转化为以逗号分隔的字符串）。\r\n\r\n      {\r\n        area: 'AREA|67fad918-f2f8-59df', // 或 subway: '...'\r\n        mode: 'true', // 或 'null'\r\n        price: 'PRICE|2000',\r\n        more: 'ORIEN|80795f1a-e32f-feb9,ROOM|d4a692e4-a177-37fd'\r\n      }\r\n    */\r\n\r\n    const newSelectedValues = {\r\n      ...this.state.selectedValues,\r\n      // 只更新当前 type 对应的选中值\r\n      [type]: value\r\n    }\r\n\r\n    const { area, mode, price, more } = newSelectedValues\r\n\r\n    // 筛选条件数据\r\n    const filters = {}\r\n\r\n    // 区域\r\n    const areaKey = area[0]\r\n    let areaValue = 'null'\r\n    if (area.length === 3) {\r\n      areaValue = area[2] !== 'null' ? area[2] : area[1]\r\n    }\r\n    filters[areaKey] = areaValue\r\n\r\n    // 方式和租金\r\n    filters.mode = mode[0]\r\n    filters.price = price[0]\r\n\r\n    // 更多筛选条件 more\r\n    filters.more = more.join(',')\r\n\r\n    // console.log(filters)\r\n\r\n    // 调用父组件中的方法，来将筛选数据传递给父组件\r\n    this.props.onFilter(filters)\r\n\r\n    // 隐藏对话框\r\n    this.setState({\r\n      openType: '',\r\n\r\n      // 更新菜单高亮状态数据\r\n      titleSelectedStatus: newTitleSelectedStatus,\r\n\r\n      selectedValues: newSelectedValues\r\n    })\r\n  }\r\n\r\n  // 渲染 FilterPicker 组件的方法\r\n  renderFilterPicker() {\r\n    const {\r\n      openType,\r\n      filtersData: { area, subway, rentType, price },\r\n      selectedValues\r\n    } = this.state\r\n\r\n    if (openType !== 'area' && openType !== 'mode' && openType !== 'price') {\r\n      return null\r\n    }\r\n\r\n    // 根据 openType 来拿到当前筛选条件数据\r\n    let data = []\r\n    let cols = 3\r\n    let defaultValue = selectedValues[openType]\r\n    switch (openType) {\r\n      case 'area':\r\n        // 获取到区域数据\r\n        data = [area, subway]\r\n        cols = 3\r\n        break\r\n      case 'mode':\r\n        data = rentType\r\n        cols = 1\r\n        break\r\n      case 'price':\r\n        data = price\r\n        cols = 1\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return (\r\n      <FilterPicker\r\n        key={openType}\r\n        onCancel={this.onCancel}\r\n        onSave={this.onSave}\r\n        data={data}\r\n        cols={cols}\r\n        type={openType}\r\n        defaultValue={defaultValue}\r\n      />\r\n    )\r\n  }\r\n\r\n  // 渲染 FilterMore 组件\r\n  renderFilterMore() {\r\n    const {\r\n      openType,\r\n      selectedValues,\r\n      filtersData: { roomType, oriented, floor, characteristic }\r\n    } = this.state\r\n\r\n    // 移除 return null\r\n\r\n    const data = {\r\n      roomType,\r\n      oriented,\r\n      floor,\r\n      characteristic\r\n    }\r\n\r\n    const defaultValue = selectedValues.more\r\n\r\n    return (\r\n      <FilterMore\r\n        data={data}\r\n        type={openType}\r\n        onSave={this.onSave}\r\n        onCancel={this.onCancel}\r\n        defaultValue={defaultValue}\r\n      />\r\n    )\r\n  }\r\n\r\n  // 渲染遮罩层div\r\n  renderMask() {\r\n    const { openType } = this.state\r\n\r\n    // 遮罩层是否隐藏\r\n    const isHide = openType === 'more' || openType === ''\r\n\r\n    return (\r\n      <Spring from={{ opacity: 0 }} to={{ opacity: isHide ? 0 : 1 }}>\r\n        {props => {\r\n          // 说明遮罩层已经完成动画效果，隐藏了\r\n          if (props.opacity === 0) {\r\n            return null\r\n          }\r\n\r\n          return (\r\n            <div\r\n              style={props}\r\n              className={styles.mask}\r\n              onClick={() => this.onCancel(openType)}\r\n            />\r\n          )\r\n        }}\r\n      </Spring>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { titleSelectedStatus } = this.state\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 前三个菜单的遮罩层 */}\r\n        {this.renderMask()}\r\n\r\n        <div className={styles.content}>\r\n          {/* 标题栏 */}\r\n          <FilterTitle\r\n            titleSelectedStatus={titleSelectedStatus}\r\n            onClick={this.onTitleClick}\r\n          />\r\n\r\n          {/* 前三个菜单对应的内容： */}\r\n          {this.renderFilterPicker()}\r\n\r\n          {/* 最后一个菜单对应的内容： */}\r\n          {this.renderFilterMore()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// dom.getBoundingClientRect() 获取元素的大小及其相对于视口的位置。\r\n\r\n/* \r\n  条件筛选栏吸顶功能实现步骤：\r\n\r\n  1 封装 Sticky 组件，实现吸顶功能。\r\n  2 在 HouseList 页面中，导入 Sticky 组件。\r\n  3 使用 Sticky 组件包裹要实现吸顶功能的 Filter 组件。\r\n\r\n  4 在 Sticky 组件中，创建两个 ref 对象（placeholder、content），分别指向占位元素和内容元素。\r\n  5 组件中，监听浏览器的 scroll 事件（注意销毁事件）。\r\n  6 在 scroll 事件中，通过 getBoundingClientRect() 方法得到筛选栏占位元素当前位置（top）。\r\n  7 判断 top 是否小于 0（是否在可视区内）。\r\n  8 如果小于，就添加需要吸顶样式（fixed），同时设置占位元素高度（与条件筛选栏高度相同）。\r\n  9 否则，就移除吸顶样式，同时让占位元素高度为 0。\r\n*/\r\n\r\nclass Sticky extends Component {\r\n  // 创建ref对象\r\n  placeholder = createRef()\r\n  content = createRef()\r\n\r\n  // scroll 事件的事件处理程序\r\n  handleScroll = () => {\r\n    const { height } = this.props\r\n    // 获取DOM对象\r\n    const placeholderEl = this.placeholder.current\r\n    const contentEl = this.content.current\r\n\r\n    const { top } = placeholderEl.getBoundingClientRect()\r\n    if (top < 0) {\r\n      // 吸顶\r\n      contentEl.classList.add(styles.fixed)\r\n      placeholderEl.style.height = `${height}px`\r\n    } else {\r\n      // 取消吸顶\r\n      contentEl.classList.remove(styles.fixed)\r\n      placeholderEl.style.height = '0px'\r\n    }\r\n  }\r\n\r\n  // 监听 scroll 事件\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* 占位元素 */}\r\n        <div ref={this.placeholder} />\r\n        {/* 内容元素 */}\r\n        <div ref={this.content}>{this.props.children}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSticky.propTypes = {\r\n  height: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Sticky\r\n","import React from 'react'\r\n\r\nimport { Flex, Toast } from 'antd-mobile'\r\n\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  WindowScroller,\r\n  InfiniteLoader\r\n} from 'react-virtualized'\r\n\r\nimport { API } from '../../utils/api'\r\nimport { BASE_URL } from '../../utils/url'\r\nimport { getCurrentCity } from '../../utils'\r\n\r\n// 导入搜索导航栏组件\r\nimport SearchHeader from '../../components/SearchHeader'\r\nimport Filter from './components/Filter'\r\nimport HouseItem from '../../components/HouseItem'\r\n// 导入吸顶组件\r\nimport Sticky from '../../components/Sticky'\r\nimport NoHouse from '../../components/NoHouse'\r\n// 导入样式\r\nimport styles from './index.module.css'\r\n\r\n// 获取当前定位城市信息\r\n// const { label, value } = JSON.parse(localStorage.getItem('hkzf_city'))\r\n\r\nexport default class HouseList extends React.Component {\r\n  state = {\r\n    // 列表数据\r\n    list: [],\r\n    // 总条数\r\n    count: 0,\r\n    // 数据是否加载中\r\n    isLoading: false\r\n  }\r\n\r\n  // 初始化默认值\r\n  label = ''\r\n  value = ''\r\n\r\n  // 初始化实例属性\r\n  filters = {}\r\n\r\n  async componentDidMount() {\r\n    // console.log('HouseList -> did mount')\r\n    const { label, value } = await getCurrentCity()\r\n    this.label = label\r\n    this.value = value\r\n\r\n    this.searchHouseList()\r\n  }\r\n\r\n  // 用来获取房屋列表数据\r\n  async searchHouseList() {\r\n    // 获取当前定位城市id\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n\r\n    // 开启loading\r\n    Toast.loading('加载中...', 0, null, false)\r\n    const res = await API.get('/houses', {\r\n      params: {\r\n        cityId: this.value,\r\n        ...this.filters,\r\n        start: 1,\r\n        end: 20\r\n      }\r\n    })\r\n    const { list, count } = res.data.body\r\n    // 关闭loading\r\n    Toast.hide()\r\n\r\n    // 提示房源数量\r\n    // 解决了没有房源数据时，也弹窗提示的bug\r\n    if (count !== 0) {\r\n      Toast.info(`共找到 ${count} 套房源`, 2, null, false)\r\n    }\r\n\r\n    this.setState({\r\n      list,\r\n      count,\r\n      // 数据加载完成的状态\r\n      isLoading: false\r\n    })\r\n  }\r\n\r\n  // 接收 Filter 组件中的筛选条件数据\r\n  onFilter = filters => {\r\n    // 返回页面顶部\r\n    window.scrollTo(0, 0)\r\n    this.filters = filters\r\n\r\n    // 调用获取房屋数据的方法\r\n    this.searchHouseList()\r\n  }\r\n\r\n  // 渲染房屋列表项\r\n  renderHouseList = ({ key, index, style }) => {\r\n    // 根据索引号来获取当前这一行的房屋数据\r\n    const { list } = this.state\r\n    const house = list[index]\r\n\r\n    // 判断 house 是否存在\r\n    // 如果不存在，就渲染 loading 元素占位\r\n    if (!house) {\r\n      return (\r\n        <div key={key} style={style}>\r\n          <p className={styles.loading} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <HouseItem\r\n        key={key}\r\n        onClick={() => this.props.history.push(`/detail/${house.houseCode}`)}\r\n        // 注意：该组件中应该接收 style，然后给组件元素设置样式！！！\r\n        style={style}\r\n        src={BASE_URL + house.houseImg}\r\n        title={house.title}\r\n        desc={house.desc}\r\n        tags={house.tags}\r\n        price={house.price}\r\n      />\r\n    )\r\n  }\r\n\r\n  // 判断列表中的每一行是否加载完成\r\n  isRowLoaded = ({ index }) => {\r\n    return !!this.state.list[index]\r\n  }\r\n\r\n  // 用来获取更多房屋列表数据\r\n  // 注意：该方法的返回值是一个 Promise 对象，并且，这个对象应该在数据加载完成时，来调用 resolve 让Promise对象的状态变为已完成。\r\n  loadMoreRows = ({ startIndex, stopIndex }) => {\r\n    return new Promise(resolve => {\r\n      API.get('/houses', {\r\n        params: {\r\n          cityId: this.value,\r\n          ...this.filters,\r\n          start: startIndex,\r\n          end: stopIndex\r\n        }\r\n      }).then(res => {\r\n        // console.log('loadMoreRows：', res)\r\n        this.setState({\r\n          list: [...this.state.list, ...res.data.body.list]\r\n        })\r\n\r\n        // 数据加载完成时，调用 resolve 即可\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 渲染列表数据\r\n  renderList() {\r\n    const { count, isLoading } = this.state\r\n    // 关键点：在数据加载完成后，再进行 count 的判断\r\n    // 解决方式：如果数据加载中，则不展示 NoHouse 组件；而，但数据加载完成后，再展示 NoHouse 组件\r\n    if (count === 0 && !isLoading) {\r\n      return <NoHouse>没有找到房源，请您换个搜索条件吧~</NoHouse>\r\n    }\r\n\r\n    return (\r\n      <InfiniteLoader\r\n        isRowLoaded={this.isRowLoaded}\r\n        loadMoreRows={this.loadMoreRows}\r\n        rowCount={count}\r\n      >\r\n        {({ onRowsRendered, registerChild }) => (\r\n          <WindowScroller>\r\n            {({ height, isScrolling, scrollTop }) => (\r\n              <AutoSizer>\r\n                {({ width }) => (\r\n                  <List\r\n                    onRowsRendered={onRowsRendered}\r\n                    ref={registerChild}\r\n                    autoHeight // 设置高度为 WindowScroller 最终渲染的列表高度\r\n                    width={width} // 视口的宽度\r\n                    height={height} // 视口的高度\r\n                    rowCount={count} // List列表项的行数\r\n                    rowHeight={120} // 每一行的高度\r\n                    rowRenderer={this.renderHouseList} // 渲染列表项中的每一行\r\n                    isScrolling={isScrolling}\r\n                    scrollTop={scrollTop}\r\n                  />\r\n                )}\r\n              </AutoSizer>\r\n            )}\r\n          </WindowScroller>\r\n        )}\r\n      </InfiniteLoader>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部搜索导航 */}\r\n        <Flex className={styles.header}>\r\n          <i\r\n            className=\"iconfont icon-back\"\r\n            onClick={() => this.props.history.go(-1)}\r\n          />\r\n          <SearchHeader cityName={this.label} className={styles.searchHeader} />\r\n        </Flex>\r\n\r\n        {/* 条件筛选栏 */}\r\n        <Sticky height={40}>\r\n          <Filter onFilter={this.onFilter} />\r\n        </Sticky>\r\n\r\n        {/* 房屋列表 */}\r\n        <div className={styles.houseItems}>{this.renderList()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}